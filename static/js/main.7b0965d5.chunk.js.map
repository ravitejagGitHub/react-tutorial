{"version":3,"sources":["Api.js","Form.js","Table.js","App.js","index.js"],"names":["Api","state","data","fetch","then","r","json","res","setState","result","this","map","entry","index","Component","Form","initialState","name","job","handleChange","event","target","value","submitForm","props","handleSubmit","htmlFor","type","id","onChange","onClick","TableHeader","TableBody","charactersData","removeCharacter","rows","row","Table","App","characters","character","filter","c","i","className","ReactDOM","render","document","getElementById"],"mappings":"wNAEaA,EAAb,4MAEIC,MAAQ,CACJC,KAAM,IAHd,uDAMI,WAAqB,IAAD,OAGhBC,MAFY,kGAEDC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UAAQF,MAC3B,SAACG,GACG,EAAKC,SAAS,CACVN,KAAMK,SAZ1B,oBAkBI,WACI,IAEME,EAFSC,KAAKT,MAAbC,KAEaS,KAAI,SAACC,EAAOC,GAC5B,OAAO,6BAAiBD,GAARC,MAGpB,OAAO,6BAAKJ,QAzBpB,GAAyBK,a,OCAZC,EAAb,4MACIC,aAAe,CACXC,KAAM,GACNC,IAAK,IAHb,EAMIjB,MAAQ,EAAKe,aANjB,EAkCIG,aAAe,SAACC,GACZ,MAAwBA,EAAMC,OAAtBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MAEd,EAAKd,SAAL,eACKS,EAAOK,KAtCpB,EA0CIC,WAAa,WACT,EAAKC,MAAMC,aAAa,EAAKxB,OAC7B,EAAKO,SAAS,EAAKQ,eA5C3B,4CAQI,WACI,MAAsBN,KAAKT,MAAnBgB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,IAEd,OACI,iCACI,uBAAOQ,QAAQ,OAAf,kBACA,uBACIC,KAAK,OACLV,KAAK,OACLW,GAAG,OACHN,MAAOL,EACPY,SAAUnB,KAAKS,eACnB,uBAAOO,QAAQ,MAAf,iBACA,uBACIC,KAAK,OACLV,KAAK,MACLW,GAAG,MACHN,MAAOJ,EACPW,SAAUnB,KAAKS,eAEnB,uBAAOQ,KAAK,SAASL,MAAM,SAASQ,QAASpB,KAAKa,oBA5BlE,GAA0BT,aCApBiB,EAAc,WAChB,OACI,gCACI,+BACI,sCACA,2CAMVC,EAAY,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,eAAgBC,EAAsB,EAAtBA,gBAC3BC,EAAOF,EAAetB,KAAI,SAACyB,EAAKvB,GAClC,OACI,+BACI,6BAAKuB,EAAInB,OACT,6BAAKmB,EAAIlB,MACT,6BACI,wBAAQY,QAAS,kBAAMI,EAAgBrB,IAAvC,wBAJCA,MASjB,OACI,gCACKsB,KAMAE,EAAb,4JACI,WACI,MAA4C3B,KAAKc,MAAzCS,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,gBAC1B,OACE,kCACE,cAAC,EAAD,IACI,cAAC,EAAD,CAAWD,eAAgBA,EAAgBC,gBAAkBA,WAN3E,GAA2BpB,aC5BdwB,EAAb,4MAEIrC,MAAQ,CACJsC,WAAY,IAHpB,EAmBId,aAAe,SAACe,GACZ,EAAKhC,SAAS,CACV+B,WAAW,GAAD,mBAAM,EAAKtC,MAAMsC,YAAjB,CAA6BC,OArBnD,EAyBIN,gBAAkB,SAACrB,GACf,IAAQ0B,EAAe,EAAKtC,MAApBsC,WAER,EAAK/B,SAAS,CACV+B,WAAaA,EAAWE,QAAO,SAACC,EAAGC,GAAJ,OAAQA,IAAI9B,QA7BvD,4CAMI,WACI,IAAQ0B,EAAe7B,KAAKT,MAApBsC,WACR,OACI,sBAAKK,UAAU,MAAf,UACI,oEACA,cAAC,EAAD,CAAOX,eAAgBM,EAAYL,gBAAiBxB,KAAKwB,kBACzD,cAAC,EAAD,CAAMT,aAAcf,KAAKe,eACzB,uBACA,cAAC,EAAD,WAdhB,GAAyBX,a,MCEzB+B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7b0965d5.chunk.js","sourcesContent":["import { Component } from \"react\";\n\nexport class Api extends Component {\n\n    state = {\n        data: [],\n    };\n    \n    componentDidMount() {\n        const url = 'https://en.wikipedia.org/w/api.php?action=opensearch&search=Seona+Dancing&format=json&origin=*';\n        \n        fetch(url).then(r => r.json()).then(\n            (res) => {\n                this.setState({\n                    data: res\n                });\n            }\n        );\n    }\n\n    render() {\n        const {data} = this.state\n\n        const result = data.map((entry, index) => {\n            return <li key={index}>{entry}</li>\n        });\n\n        return <ul>{result}</ul>;\n    }\n}","import {Component} from 'react'\n\nexport class Form extends Component {\n    initialState = {\n        name: '',\n        job: '',\n    };\n\n    state = this.initialState;\n\n    render() {\n        const { name, job } = this.state;\n      \n        return (\n            <form>\n                <label htmlFor=\"name\">Name</label>\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"name\"\n                    value={name}\n                    onChange={this.handleChange} />\n                <label htmlFor=\"job\">Job</label>\n                <input\n                    type=\"text\"\n                    name=\"job\"\n                    id=\"job\"\n                    value={job}\n                    onChange={this.handleChange} />\n\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n            </form>\n            \n        );\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target;\n\n        this.setState({\n            [name]: value\n        });\n    };\n\n    submitForm = () => {\n        this.props.handleSubmit(this.state);\n        this.setState(this.initialState);\n    };\n      \n}","import { Component } from \"react\";\n\nconst TableHeader = () => {\n    return (\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Job</th>\n            </tr>\n        </thead>\n    );\n}\n\nconst TableBody = ( {charactersData, removeCharacter }) => {\n    const rows = charactersData.map((row, index) => {\n        return (\n            <tr key={index}>\n                <td>{row.name}</td>\n                <td>{row.job}</td>\n                <td>\n                    <button onClick={() => removeCharacter(index)}>Delete</button>\n                </td>\n            </tr>\n        );\n    });\n    return (\n        <tbody>\n            {rows}\n        </tbody>\n    );\n}\n\n\nexport class Table extends Component {\n    render() {\n        const { charactersData, removeCharacter } = this.props;\n      return (\n        <table>\n          <TableHeader />\n              <TableBody charactersData={charactersData} removeCharacter={ removeCharacter }/>\n        </table>\n      )\n    }\n}","import React, {Component} from \"react\";\nimport { Api } from \"./Api\";\nimport { Form } from \"./Form\";\nimport { Table } from \"./Table\";\n\nexport class App extends Component {\n\n    state = {\n        characters: []\n    };\n\n    render() {\n        const { characters } = this.state;\n        return (\n            <div className=\"app\">\n                <h1> Hello Raviteja, Welcome to React.</h1>\n                <Table charactersData={characters} removeCharacter={this.removeCharacter} />\n                <Form handleSubmit={this.handleSubmit} />\n                <hr />\n                <Api />\n            </div>\n        );\n    }\n\n    handleSubmit = (character) => {\n        this.setState({\n            characters: [...this.state.characters, character]\n        })\n    };\n\n    removeCharacter = (index) => {\n        const { characters } = this.state;\n\n        this.setState({\n            characters:  characters.filter((c, i)=>i!==index)\n        })\n    };\n}","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport { App } from './App';\nimport './index.css';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}